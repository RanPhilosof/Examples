@using MudBlazor
<MudDialog 
    Class="blur dialog-background" 
    TitleClass="blur dialog-background-title" 
    ContentClass="dialog-background-surface py-10" 
    ActionsClass="dialog-background-surface"
    Style="width: 100%;">


    <DialogContent>
        <MudText>Select Type To Construct</MudText>
        <MudSelect T="string" Label="" AnchorOrigin="Origin.BottomCenter" @bind-Value="_returnValue">
            @foreach (var option in Options)
            {
                <MudSelectItem Value="@(option)" />
            }
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Error" OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

<style>
    .blur {
        backdrop-filter: blur(10px);
    }

    .dialog-background {
        background-color: transparent;
    }

    .dialog-background-title {
        background: rgb(from var(--mud-palette-info-lighten) r g b / 50%);
        color: var(--mud-palette-white);
    }

    .dialog-background-surface {
        background: rgb(from var(--mud-palette-surface) r g b / 75%);
    }
</style>
@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }    

    [Parameter]

    public List<string> Options { get { return _options; } set { _options = value; _returnValue = value.FirstOrDefault(); } }

    public List<string> _options = new List<string>();

    private string _returnValue;

    private void Submit() => MudDialog.Close(DialogResult.Ok(_returnValue));

    private void Cancel() => MudDialog.Cancel();
}